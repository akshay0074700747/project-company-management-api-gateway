apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio-database
spec:
  selector:
    matchLabels:
      app: minio-database
  serviceName: minio-service
  replicas: 1
  template:
    metadata:
      labels:
        app: minio-database
    spec:
      containers:
      - name: minio-database
        image: quay.io/minio/minio:latest
        command: ["/bin/bash", "-c", "set -e; buckets=(snapshots-storage-bucket resume-storage-bucket tasks-storage-bucket); for bucket in '${buckets[@]}'; do mc mb $bucket; done; echo 'Buckets created successfully!'; minio server /data"]
        # command: ["/bin/bash", "-c",
        #   "set -e;

        #   buckets=(snapshots-storage-bucket resume-storage-bucket tasks-storage-bucket);

        #   for bucket in '${buckets[@]}'; do
        #     if ! mc bucket exists $bucket; then
        #        mc mb $bucket;
        #     fi
        #   done

        #   echo 'Buckets created successfully!'

        #   minio server /data"]
      # command: ["/bin/bash", "-c",
      #   "set -e; # Exit on errors

      #   # Download MinIO Client binary
      #   curl -sL https://dl.min.io/client/mc/release/linux-amd64/mc -o /tmp/mc && chmod +x /tmp/mc

      #   # Update path to downloaded mc binary
      #   mc='/tmp/mc'

      #   buckets=(snapshots-storage-bucket resume-storage-bucket tasks-storage-bucket);

      #   for bucket in '${buckets[@]}'; do
      #   if ! $mc mc bucket exists $bucket; then
      #   $mc mc mb $bucket;
      #   fi
      #   done

      #   echo 'Buckets created successfully!'

      #   minio server /data"]
        envFrom:
        - secretRef:
            name: minio-secret
        ports:
        - containerPort: 9000
          name: dbone
        - containerPort: 9001
          name: dbtwo
        volumeMounts:
        - name: minio-data
          mountPath: /data
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: minio-data
  volumeClaimTemplates:
  - metadata:
      name: minio-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
          requests:
            storage: 50Mi
